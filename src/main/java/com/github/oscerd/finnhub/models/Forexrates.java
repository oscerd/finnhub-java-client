/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Forexrates
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class Forexrates {
  @SerializedName("base")
  private String base = null;

  @SerializedName("quote")
  private ForexRate quote = null;

  public Forexrates base(String base) {
    this.base = base;
    return this;
  }

   /**
   * Base currency.
   * @return base
  **/
  @Schema(description = "Base currency.")
  public String getBase() {
    return base;
  }

  public void setBase(String base) {
    this.base = base;
  }

  public Forexrates quote(ForexRate quote) {
    this.quote = quote;
    return this;
  }

   /**
   * Get quote
   * @return quote
  **/
  @Schema(description = "")
  public ForexRate getQuote() {
    return quote;
  }

  public void setQuote(ForexRate quote) {
    this.quote = quote;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Forexrates forexrates = (Forexrates) o;
    return Objects.equals(this.base, forexrates.base) &&
        Objects.equals(this.quote, forexrates.quote);
  }

  @Override
  public int hashCode() {
    return Objects.hash(base, quote);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Forexrates {\n");
    
    sb.append("    base: ").append(toIndentedString(base)).append("\n");
    sb.append("    quote: ").append(toIndentedString(quote)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
