/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * NewsSentiment
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class NewsSentiment {
  @SerializedName("buzz")
  private CompanyNewsStatistics buzz = null;

  @SerializedName("companyNewsScore")
  private Float companyNewsScore = null;

  @SerializedName("sectorAverageBullishPercent")
  private Float sectorAverageBullishPercent = null;

  @SerializedName("sectorAverageNewsScore")
  private Float sectorAverageNewsScore = null;

  @SerializedName("sentiment")
  private Sentiment sentiment = null;

  @SerializedName("symbol")
  private String symbol = null;

  public NewsSentiment buzz(CompanyNewsStatistics buzz) {
    this.buzz = buzz;
    return this;
  }

   /**
   * Get buzz
   * @return buzz
  **/
  @Schema(description = "")
  public CompanyNewsStatistics getBuzz() {
    return buzz;
  }

  public void setBuzz(CompanyNewsStatistics buzz) {
    this.buzz = buzz;
  }

  public NewsSentiment companyNewsScore(Float companyNewsScore) {
    this.companyNewsScore = companyNewsScore;
    return this;
  }

   /**
   * News score.
   * @return companyNewsScore
  **/
  @Schema(description = "News score.")
  public Float getCompanyNewsScore() {
    return companyNewsScore;
  }

  public void setCompanyNewsScore(Float companyNewsScore) {
    this.companyNewsScore = companyNewsScore;
  }

  public NewsSentiment sectorAverageBullishPercent(Float sectorAverageBullishPercent) {
    this.sectorAverageBullishPercent = sectorAverageBullishPercent;
    return this;
  }

   /**
   * Sector average bullish percent.
   * @return sectorAverageBullishPercent
  **/
  @Schema(description = "Sector average bullish percent.")
  public Float getSectorAverageBullishPercent() {
    return sectorAverageBullishPercent;
  }

  public void setSectorAverageBullishPercent(Float sectorAverageBullishPercent) {
    this.sectorAverageBullishPercent = sectorAverageBullishPercent;
  }

  public NewsSentiment sectorAverageNewsScore(Float sectorAverageNewsScore) {
    this.sectorAverageNewsScore = sectorAverageNewsScore;
    return this;
  }

   /**
   * Sectore average score.
   * @return sectorAverageNewsScore
  **/
  @Schema(description = "Sectore average score.")
  public Float getSectorAverageNewsScore() {
    return sectorAverageNewsScore;
  }

  public void setSectorAverageNewsScore(Float sectorAverageNewsScore) {
    this.sectorAverageNewsScore = sectorAverageNewsScore;
  }

  public NewsSentiment sentiment(Sentiment sentiment) {
    this.sentiment = sentiment;
    return this;
  }

   /**
   * Get sentiment
   * @return sentiment
  **/
  @Schema(description = "")
  public Sentiment getSentiment() {
    return sentiment;
  }

  public void setSentiment(Sentiment sentiment) {
    this.sentiment = sentiment;
  }

  public NewsSentiment symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Requested symbol.
   * @return symbol
  **/
  @Schema(description = "Requested symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewsSentiment newsSentiment = (NewsSentiment) o;
    return Objects.equals(this.buzz, newsSentiment.buzz) &&
        Objects.equals(this.companyNewsScore, newsSentiment.companyNewsScore) &&
        Objects.equals(this.sectorAverageBullishPercent, newsSentiment.sectorAverageBullishPercent) &&
        Objects.equals(this.sectorAverageNewsScore, newsSentiment.sectorAverageNewsScore) &&
        Objects.equals(this.sentiment, newsSentiment.sentiment) &&
        Objects.equals(this.symbol, newsSentiment.symbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buzz, companyNewsScore, sectorAverageBullishPercent, sectorAverageNewsScore, sentiment, symbol);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewsSentiment {\n");
    
    sb.append("    buzz: ").append(toIndentedString(buzz)).append("\n");
    sb.append("    companyNewsScore: ").append(toIndentedString(companyNewsScore)).append("\n");
    sb.append("    sectorAverageBullishPercent: ").append(toIndentedString(sectorAverageBullishPercent)).append("\n");
    sb.append("    sectorAverageNewsScore: ").append(toIndentedString(sectorAverageNewsScore)).append("\n");
    sb.append("    sentiment: ").append(toIndentedString(sentiment)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
