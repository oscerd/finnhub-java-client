/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * SymbolChange
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class SymbolChange {
  @SerializedName("fromDate")
  private String fromDate = null;

  @SerializedName("toDate")
  private String toDate = null;

  @SerializedName("data")
  private List<SymbolChangeInfo> data = null;

  public SymbolChange fromDate(String fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * From date.
   * @return fromDate
  **/
  @Schema(description = "From date.")
  public String getFromDate() {
    return fromDate;
  }

  public void setFromDate(String fromDate) {
    this.fromDate = fromDate;
  }

  public SymbolChange toDate(String toDate) {
    this.toDate = toDate;
    return this;
  }

   /**
   * To date.
   * @return toDate
  **/
  @Schema(description = "To date.")
  public String getToDate() {
    return toDate;
  }

  public void setToDate(String toDate) {
    this.toDate = toDate;
  }

  public SymbolChange data(List<SymbolChangeInfo> data) {
    this.data = data;
    return this;
  }

  public SymbolChange addDataItem(SymbolChangeInfo dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<SymbolChangeInfo>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Array of symbol change events.
   * @return data
  **/
  @Schema(description = "Array of symbol change events.")
  public List<SymbolChangeInfo> getData() {
    return data;
  }

  public void setData(List<SymbolChangeInfo> data) {
    this.data = data;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SymbolChange symbolChange = (SymbolChange) o;
    return Objects.equals(this.fromDate, symbolChange.fromDate) &&
        Objects.equals(this.toDate, symbolChange.toDate) &&
        Objects.equals(this.data, symbolChange.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromDate, toDate, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SymbolChange {\n");
    
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
