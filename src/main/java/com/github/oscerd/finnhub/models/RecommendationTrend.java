/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * RecommendationTrend
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class RecommendationTrend {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("buy")
  private Long buy = null;

  @SerializedName("hold")
  private Long hold = null;

  @SerializedName("period")
  private String period = null;

  @SerializedName("sell")
  private Long sell = null;

  @SerializedName("strongBuy")
  private Long strongBuy = null;

  @SerializedName("strongSell")
  private Long strongSell = null;

  public RecommendationTrend symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Company symbol.
   * @return symbol
  **/
  @Schema(description = "Company symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public RecommendationTrend buy(Long buy) {
    this.buy = buy;
    return this;
  }

   /**
   * Number of recommendations that fall into the Buy category
   * @return buy
  **/
  @Schema(description = "Number of recommendations that fall into the Buy category")
  public Long getBuy() {
    return buy;
  }

  public void setBuy(Long buy) {
    this.buy = buy;
  }

  public RecommendationTrend hold(Long hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Number of recommendations that fall into the Hold category
   * @return hold
  **/
  @Schema(description = "Number of recommendations that fall into the Hold category")
  public Long getHold() {
    return hold;
  }

  public void setHold(Long hold) {
    this.hold = hold;
  }

  public RecommendationTrend period(String period) {
    this.period = period;
    return this;
  }

   /**
   * Updated period
   * @return period
  **/
  @Schema(description = "Updated period")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public RecommendationTrend sell(Long sell) {
    this.sell = sell;
    return this;
  }

   /**
   * Number of recommendations that fall into the Sell category
   * @return sell
  **/
  @Schema(description = "Number of recommendations that fall into the Sell category")
  public Long getSell() {
    return sell;
  }

  public void setSell(Long sell) {
    this.sell = sell;
  }

  public RecommendationTrend strongBuy(Long strongBuy) {
    this.strongBuy = strongBuy;
    return this;
  }

   /**
   * Number of recommendations that fall into the Strong Buy category
   * @return strongBuy
  **/
  @Schema(description = "Number of recommendations that fall into the Strong Buy category")
  public Long getStrongBuy() {
    return strongBuy;
  }

  public void setStrongBuy(Long strongBuy) {
    this.strongBuy = strongBuy;
  }

  public RecommendationTrend strongSell(Long strongSell) {
    this.strongSell = strongSell;
    return this;
  }

   /**
   * Number of recommendations that fall into the Strong Sell category
   * @return strongSell
  **/
  @Schema(description = "Number of recommendations that fall into the Strong Sell category")
  public Long getStrongSell() {
    return strongSell;
  }

  public void setStrongSell(Long strongSell) {
    this.strongSell = strongSell;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecommendationTrend recommendationTrend = (RecommendationTrend) o;
    return Objects.equals(this.symbol, recommendationTrend.symbol) &&
        Objects.equals(this.buy, recommendationTrend.buy) &&
        Objects.equals(this.hold, recommendationTrend.hold) &&
        Objects.equals(this.period, recommendationTrend.period) &&
        Objects.equals(this.sell, recommendationTrend.sell) &&
        Objects.equals(this.strongBuy, recommendationTrend.strongBuy) &&
        Objects.equals(this.strongSell, recommendationTrend.strongSell);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, buy, hold, period, sell, strongBuy, strongSell);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecommendationTrend {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    buy: ").append(toIndentedString(buy)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    sell: ").append(toIndentedString(sell)).append("\n");
    sb.append("    strongBuy: ").append(toIndentedString(strongBuy)).append("\n");
    sb.append("    strongSell: ").append(toIndentedString(strongSell)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
