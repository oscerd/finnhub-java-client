/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;

import java.util.Objects;
/**
 * IPOEvent
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class IPOEvent {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("exchange")
  private String exchange = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("numberOfShares")
  private Float numberOfShares = null;

  @SerializedName("totalSharesValue")
  private Float totalSharesValue = null;

  public IPOEvent symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Symbol.
   * @return symbol
  **/
  @Schema(description = "Symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public IPOEvent date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * IPO date.
   * @return date
  **/
  @Schema(description = "IPO date.")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public IPOEvent exchange(String exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Exchange.
   * @return exchange
  **/
  @Schema(description = "Exchange.")
  public String getExchange() {
    return exchange;
  }

  public void setExchange(String exchange) {
    this.exchange = exchange;
  }

  public IPOEvent name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Company&#x27;s name.
   * @return name
  **/
  @Schema(description = "Company's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IPOEvent status(String status) {
    this.status = status;
    return this;
  }

   /**
   * IPO status. Can take 1 of the following values: &lt;code&gt;expected&lt;/code&gt;,&lt;code&gt;priced&lt;/code&gt;,&lt;code&gt;withdrawn&lt;/code&gt;,&lt;code&gt;filed&lt;/code&gt;
   * @return status
  **/
  @Schema(description = "IPO status. Can take 1 of the following values: <code>expected</code>,<code>priced</code>,<code>withdrawn</code>,<code>filed</code>")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public IPOEvent price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Projected price or price range.
   * @return price
  **/
  @Schema(description = "Projected price or price range.")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public IPOEvent numberOfShares(Float numberOfShares) {
    this.numberOfShares = numberOfShares;
    return this;
  }

   /**
   * Number of shares offered during the IPO.
   * @return numberOfShares
  **/
  @Schema(description = "Number of shares offered during the IPO.")
  public Float getNumberOfShares() {
    return numberOfShares;
  }

  public void setNumberOfShares(Float numberOfShares) {
    this.numberOfShares = numberOfShares;
  }

  public IPOEvent totalSharesValue(Float totalSharesValue) {
    this.totalSharesValue = totalSharesValue;
    return this;
  }

   /**
   * Total shares value.
   * @return totalSharesValue
  **/
  @Schema(description = "Total shares value.")
  public Float getTotalSharesValue() {
    return totalSharesValue;
  }

  public void setTotalSharesValue(Float totalSharesValue) {
    this.totalSharesValue = totalSharesValue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPOEvent ipOEvent = (IPOEvent) o;
    return Objects.equals(this.symbol, ipOEvent.symbol) &&
        Objects.equals(this.date, ipOEvent.date) &&
        Objects.equals(this.exchange, ipOEvent.exchange) &&
        Objects.equals(this.name, ipOEvent.name) &&
        Objects.equals(this.status, ipOEvent.status) &&
        Objects.equals(this.price, ipOEvent.price) &&
        Objects.equals(this.numberOfShares, ipOEvent.numberOfShares) &&
        Objects.equals(this.totalSharesValue, ipOEvent.totalSharesValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, date, exchange, name, status, price, numberOfShares, totalSharesValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPOEvent {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    numberOfShares: ").append(toIndentedString(numberOfShares)).append("\n");
    sb.append("    totalSharesValue: ").append(toIndentedString(totalSharesValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
