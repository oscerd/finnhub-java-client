/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;

import java.util.Objects;
/**
 * EbitdaEstimatesInfo
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class EbitdaEstimatesInfo {
  @SerializedName("ebitdaAvg")
  private Float ebitdaAvg = null;

  @SerializedName("ebitdaHigh")
  private Float ebitdaHigh = null;

  @SerializedName("ebitdaLow")
  private Float ebitdaLow = null;

  @SerializedName("numberAnalysts")
  private Long numberAnalysts = null;

  @SerializedName("period")
  private LocalDate period = null;

  @SerializedName("year")
  private Long year = null;

  @SerializedName("quarter")
  private Long quarter = null;

  public EbitdaEstimatesInfo ebitdaAvg(Float ebitdaAvg) {
    this.ebitdaAvg = ebitdaAvg;
    return this;
  }

   /**
   * Average EBITDA estimates including Finnhub&#x27;s proprietary estimates.
   * @return ebitdaAvg
  **/
  @Schema(description = "Average EBITDA estimates including Finnhub's proprietary estimates.")
  public Float getEbitdaAvg() {
    return ebitdaAvg;
  }

  public void setEbitdaAvg(Float ebitdaAvg) {
    this.ebitdaAvg = ebitdaAvg;
  }

  public EbitdaEstimatesInfo ebitdaHigh(Float ebitdaHigh) {
    this.ebitdaHigh = ebitdaHigh;
    return this;
  }

   /**
   * Highest estimate.
   * @return ebitdaHigh
  **/
  @Schema(description = "Highest estimate.")
  public Float getEbitdaHigh() {
    return ebitdaHigh;
  }

  public void setEbitdaHigh(Float ebitdaHigh) {
    this.ebitdaHigh = ebitdaHigh;
  }

  public EbitdaEstimatesInfo ebitdaLow(Float ebitdaLow) {
    this.ebitdaLow = ebitdaLow;
    return this;
  }

   /**
   * Lowest estimate.
   * @return ebitdaLow
  **/
  @Schema(description = "Lowest estimate.")
  public Float getEbitdaLow() {
    return ebitdaLow;
  }

  public void setEbitdaLow(Float ebitdaLow) {
    this.ebitdaLow = ebitdaLow;
  }

  public EbitdaEstimatesInfo numberAnalysts(Long numberAnalysts) {
    this.numberAnalysts = numberAnalysts;
    return this;
  }

   /**
   * Number of Analysts.
   * @return numberAnalysts
  **/
  @Schema(description = "Number of Analysts.")
  public Long getNumberAnalysts() {
    return numberAnalysts;
  }

  public void setNumberAnalysts(Long numberAnalysts) {
    this.numberAnalysts = numberAnalysts;
  }

  public EbitdaEstimatesInfo period(LocalDate period) {
    this.period = period;
    return this;
  }

   /**
   * Period.
   * @return period
  **/
  @Schema(description = "Period.")
  public LocalDate getPeriod() {
    return period;
  }

  public void setPeriod(LocalDate period) {
    this.period = period;
  }

  public EbitdaEstimatesInfo year(Long year) {
    this.year = year;
    return this;
  }

   /**
   * Fiscal year.
   * @return year
  **/
  @Schema(description = "Fiscal year.")
  public Long getYear() {
    return year;
  }

  public void setYear(Long year) {
    this.year = year;
  }

  public EbitdaEstimatesInfo quarter(Long quarter) {
    this.quarter = quarter;
    return this;
  }

   /**
   * Fiscal quarter.
   * @return quarter
  **/
  @Schema(description = "Fiscal quarter.")
  public Long getQuarter() {
    return quarter;
  }

  public void setQuarter(Long quarter) {
    this.quarter = quarter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EbitdaEstimatesInfo ebitdaEstimatesInfo = (EbitdaEstimatesInfo) o;
    return Objects.equals(this.ebitdaAvg, ebitdaEstimatesInfo.ebitdaAvg) &&
        Objects.equals(this.ebitdaHigh, ebitdaEstimatesInfo.ebitdaHigh) &&
        Objects.equals(this.ebitdaLow, ebitdaEstimatesInfo.ebitdaLow) &&
        Objects.equals(this.numberAnalysts, ebitdaEstimatesInfo.numberAnalysts) &&
        Objects.equals(this.period, ebitdaEstimatesInfo.period) &&
        Objects.equals(this.year, ebitdaEstimatesInfo.year) &&
        Objects.equals(this.quarter, ebitdaEstimatesInfo.quarter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ebitdaAvg, ebitdaHigh, ebitdaLow, numberAnalysts, period, year, quarter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EbitdaEstimatesInfo {\n");
    
    sb.append("    ebitdaAvg: ").append(toIndentedString(ebitdaAvg)).append("\n");
    sb.append("    ebitdaHigh: ").append(toIndentedString(ebitdaHigh)).append("\n");
    sb.append("    ebitdaLow: ").append(toIndentedString(ebitdaLow)).append("\n");
    sb.append("    numberAnalysts: ").append(toIndentedString(numberAnalysts)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    quarter: ").append(toIndentedString(quarter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
