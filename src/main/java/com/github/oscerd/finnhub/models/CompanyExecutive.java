/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * CompanyExecutive
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class CompanyExecutive {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("executive")
  private List<Company> executive = null;

  public CompanyExecutive symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Company symbol.
   * @return symbol
  **/
  @Schema(description = "Company symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CompanyExecutive executive(List<Company> executive) {
    this.executive = executive;
    return this;
  }

  public CompanyExecutive addExecutiveItem(Company executiveItem) {
    if (this.executive == null) {
      this.executive = new ArrayList<Company>();
    }
    this.executive.add(executiveItem);
    return this;
  }

   /**
   * Array of company&#x27;s executives and members of the Board.
   * @return executive
  **/
  @Schema(description = "Array of company's executives and members of the Board.")
  public List<Company> getExecutive() {
    return executive;
  }

  public void setExecutive(List<Company> executive) {
    this.executive = executive;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyExecutive companyExecutive = (CompanyExecutive) o;
    return Objects.equals(this.symbol, companyExecutive.symbol) &&
        Objects.equals(this.executive, companyExecutive.executive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, executive);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyExecutive {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    executive: ").append(toIndentedString(executive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
