/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * UpgradeDowngrade
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class UpgradeDowngrade {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("gradeTime")
  private Long gradeTime = null;

  @SerializedName("fromGrade")
  private String fromGrade = null;

  @SerializedName("toGrade")
  private String toGrade = null;

  @SerializedName("company")
  private String company = null;

  @SerializedName("action")
  private String action = null;

  public UpgradeDowngrade symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Company symbol.
   * @return symbol
  **/
  @Schema(description = "Company symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public UpgradeDowngrade gradeTime(Long gradeTime) {
    this.gradeTime = gradeTime;
    return this;
  }

   /**
   * Upgrade/downgrade time in UNIX timestamp.
   * @return gradeTime
  **/
  @Schema(description = "Upgrade/downgrade time in UNIX timestamp.")
  public Long getGradeTime() {
    return gradeTime;
  }

  public void setGradeTime(Long gradeTime) {
    this.gradeTime = gradeTime;
  }

  public UpgradeDowngrade fromGrade(String fromGrade) {
    this.fromGrade = fromGrade;
    return this;
  }

   /**
   * From grade.
   * @return fromGrade
  **/
  @Schema(description = "From grade.")
  public String getFromGrade() {
    return fromGrade;
  }

  public void setFromGrade(String fromGrade) {
    this.fromGrade = fromGrade;
  }

  public UpgradeDowngrade toGrade(String toGrade) {
    this.toGrade = toGrade;
    return this;
  }

   /**
   * To grade.
   * @return toGrade
  **/
  @Schema(description = "To grade.")
  public String getToGrade() {
    return toGrade;
  }

  public void setToGrade(String toGrade) {
    this.toGrade = toGrade;
  }

  public UpgradeDowngrade company(String company) {
    this.company = company;
    return this;
  }

   /**
   * Company/analyst who did the upgrade/downgrade.
   * @return company
  **/
  @Schema(description = "Company/analyst who did the upgrade/downgrade.")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public UpgradeDowngrade action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Action can take any of the following values: &lt;code&gt;up(upgrade), down(downgrade), main(maintains), init(initiate), reit(reiterate)&lt;/code&gt;.
   * @return action
  **/
  @Schema(description = "Action can take any of the following values: <code>up(upgrade), down(downgrade), main(maintains), init(initiate), reit(reiterate)</code>.")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpgradeDowngrade upgradeDowngrade = (UpgradeDowngrade) o;
    return Objects.equals(this.symbol, upgradeDowngrade.symbol) &&
        Objects.equals(this.gradeTime, upgradeDowngrade.gradeTime) &&
        Objects.equals(this.fromGrade, upgradeDowngrade.fromGrade) &&
        Objects.equals(this.toGrade, upgradeDowngrade.toGrade) &&
        Objects.equals(this.company, upgradeDowngrade.company) &&
        Objects.equals(this.action, upgradeDowngrade.action);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, gradeTime, fromGrade, toGrade, company, action);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpgradeDowngrade {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    gradeTime: ").append(toIndentedString(gradeTime)).append("\n");
    sb.append("    fromGrade: ").append(toIndentedString(fromGrade)).append("\n");
    sb.append("    toGrade: ").append(toIndentedString(toGrade)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
