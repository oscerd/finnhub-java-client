/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;

import java.util.Objects;
/**
 * MutualFundProfileData
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class MutualFundProfileData {
  @SerializedName("name")
  private String name = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("investmentSegment")
  private String investmentSegment = null;

  @SerializedName("totalNav")
  private Float totalNav = null;

  @SerializedName("expenseRatio")
  private Float expenseRatio = null;

  @SerializedName("benchmark")
  private String benchmark = null;

  @SerializedName("inceptionDate")
  private LocalDate inceptionDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("fundFamily")
  private String fundFamily = null;

  @SerializedName("fundCompany")
  private String fundCompany = null;

  @SerializedName("manager")
  private String manager = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("beta")
  private Float beta = null;

  @SerializedName("deferredLoad")
  private Float deferredLoad = null;

  @SerializedName("fee12b1")
  private Float fee12b1 = null;

  @SerializedName("frontLoad")
  private Float frontLoad = null;

  @SerializedName("iraMinInvestment")
  private Float iraMinInvestment = null;

  @SerializedName("isin")
  private String isin = null;

  @SerializedName("cusip")
  private String cusip = null;

  @SerializedName("maxRedemptionFee")
  private Float maxRedemptionFee = null;

  @SerializedName("standardMinInvestment")
  private Float standardMinInvestment = null;

  @SerializedName("turnover")
  private Float turnover = null;

  @SerializedName("seriesId")
  private String seriesId = null;

  @SerializedName("seriesName")
  private String seriesName = null;

  @SerializedName("classId")
  private String classId = null;

  @SerializedName("className")
  private String className = null;

  @SerializedName("sfdrClassification")
  private String sfdrClassification = null;

  @SerializedName("currency")
  private String currency = null;

  public MutualFundProfileData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @Schema(description = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MutualFundProfileData category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Fund&#x27;s category.
   * @return category
  **/
  @Schema(description = "Fund's category.")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public MutualFundProfileData investmentSegment(String investmentSegment) {
    this.investmentSegment = investmentSegment;
    return this;
  }

   /**
   * Investment Segment.
   * @return investmentSegment
  **/
  @Schema(description = "Investment Segment.")
  public String getInvestmentSegment() {
    return investmentSegment;
  }

  public void setInvestmentSegment(String investmentSegment) {
    this.investmentSegment = investmentSegment;
  }

  public MutualFundProfileData totalNav(Float totalNav) {
    this.totalNav = totalNav;
    return this;
  }

   /**
   * NAV.
   * @return totalNav
  **/
  @Schema(description = "NAV.")
  public Float getTotalNav() {
    return totalNav;
  }

  public void setTotalNav(Float totalNav) {
    this.totalNav = totalNav;
  }

  public MutualFundProfileData expenseRatio(Float expenseRatio) {
    this.expenseRatio = expenseRatio;
    return this;
  }

   /**
   * Expense ratio.
   * @return expenseRatio
  **/
  @Schema(description = "Expense ratio.")
  public Float getExpenseRatio() {
    return expenseRatio;
  }

  public void setExpenseRatio(Float expenseRatio) {
    this.expenseRatio = expenseRatio;
  }

  public MutualFundProfileData benchmark(String benchmark) {
    this.benchmark = benchmark;
    return this;
  }

   /**
   * Index benchmark.
   * @return benchmark
  **/
  @Schema(description = "Index benchmark.")
  public String getBenchmark() {
    return benchmark;
  }

  public void setBenchmark(String benchmark) {
    this.benchmark = benchmark;
  }

  public MutualFundProfileData inceptionDate(LocalDate inceptionDate) {
    this.inceptionDate = inceptionDate;
    return this;
  }

   /**
   * Inception date.
   * @return inceptionDate
  **/
  @Schema(description = "Inception date.")
  public LocalDate getInceptionDate() {
    return inceptionDate;
  }

  public void setInceptionDate(LocalDate inceptionDate) {
    this.inceptionDate = inceptionDate;
  }

  public MutualFundProfileData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Fund&#x27;s description.
   * @return description
  **/
  @Schema(description = "Fund's description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public MutualFundProfileData fundFamily(String fundFamily) {
    this.fundFamily = fundFamily;
    return this;
  }

   /**
   * Fund Family.
   * @return fundFamily
  **/
  @Schema(description = "Fund Family.")
  public String getFundFamily() {
    return fundFamily;
  }

  public void setFundFamily(String fundFamily) {
    this.fundFamily = fundFamily;
  }

  public MutualFundProfileData fundCompany(String fundCompany) {
    this.fundCompany = fundCompany;
    return this;
  }

   /**
   * Fund Company.
   * @return fundCompany
  **/
  @Schema(description = "Fund Company.")
  public String getFundCompany() {
    return fundCompany;
  }

  public void setFundCompany(String fundCompany) {
    this.fundCompany = fundCompany;
  }

  public MutualFundProfileData manager(String manager) {
    this.manager = manager;
    return this;
  }

   /**
   * Fund&#x27;s managers.
   * @return manager
  **/
  @Schema(description = "Fund's managers.")
  public String getManager() {
    return manager;
  }

  public void setManager(String manager) {
    this.manager = manager;
  }

  public MutualFundProfileData status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status.
   * @return status
  **/
  @Schema(description = "Status.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public MutualFundProfileData beta(Float beta) {
    this.beta = beta;
    return this;
  }

   /**
   * Beta.
   * @return beta
  **/
  @Schema(description = "Beta.")
  public Float getBeta() {
    return beta;
  }

  public void setBeta(Float beta) {
    this.beta = beta;
  }

  public MutualFundProfileData deferredLoad(Float deferredLoad) {
    this.deferredLoad = deferredLoad;
    return this;
  }

   /**
   * Deferred load.
   * @return deferredLoad
  **/
  @Schema(description = "Deferred load.")
  public Float getDeferredLoad() {
    return deferredLoad;
  }

  public void setDeferredLoad(Float deferredLoad) {
    this.deferredLoad = deferredLoad;
  }

  public MutualFundProfileData fee12b1(Float fee12b1) {
    this.fee12b1 = fee12b1;
    return this;
  }

   /**
   * 12B-1 fee.
   * @return fee12b1
  **/
  @Schema(description = "12B-1 fee.")
  public Float getFee12b1() {
    return fee12b1;
  }

  public void setFee12b1(Float fee12b1) {
    this.fee12b1 = fee12b1;
  }

  public MutualFundProfileData frontLoad(Float frontLoad) {
    this.frontLoad = frontLoad;
    return this;
  }

   /**
   * Front Load.
   * @return frontLoad
  **/
  @Schema(description = "Front Load.")
  public Float getFrontLoad() {
    return frontLoad;
  }

  public void setFrontLoad(Float frontLoad) {
    this.frontLoad = frontLoad;
  }

  public MutualFundProfileData iraMinInvestment(Float iraMinInvestment) {
    this.iraMinInvestment = iraMinInvestment;
    return this;
  }

   /**
   * IRA minimum investment.
   * @return iraMinInvestment
  **/
  @Schema(description = "IRA minimum investment.")
  public Float getIraMinInvestment() {
    return iraMinInvestment;
  }

  public void setIraMinInvestment(Float iraMinInvestment) {
    this.iraMinInvestment = iraMinInvestment;
  }

  public MutualFundProfileData isin(String isin) {
    this.isin = isin;
    return this;
  }

   /**
   * ISIN.
   * @return isin
  **/
  @Schema(description = "ISIN.")
  public String getIsin() {
    return isin;
  }

  public void setIsin(String isin) {
    this.isin = isin;
  }

  public MutualFundProfileData cusip(String cusip) {
    this.cusip = cusip;
    return this;
  }

   /**
   * CUSIP.
   * @return cusip
  **/
  @Schema(description = "CUSIP.")
  public String getCusip() {
    return cusip;
  }

  public void setCusip(String cusip) {
    this.cusip = cusip;
  }

  public MutualFundProfileData maxRedemptionFee(Float maxRedemptionFee) {
    this.maxRedemptionFee = maxRedemptionFee;
    return this;
  }

   /**
   * Max redemption fee.
   * @return maxRedemptionFee
  **/
  @Schema(description = "Max redemption fee.")
  public Float getMaxRedemptionFee() {
    return maxRedemptionFee;
  }

  public void setMaxRedemptionFee(Float maxRedemptionFee) {
    this.maxRedemptionFee = maxRedemptionFee;
  }

  public MutualFundProfileData standardMinInvestment(Float standardMinInvestment) {
    this.standardMinInvestment = standardMinInvestment;
    return this;
  }

   /**
   * Minimum investment for standard accounts.
   * @return standardMinInvestment
  **/
  @Schema(description = "Minimum investment for standard accounts.")
  public Float getStandardMinInvestment() {
    return standardMinInvestment;
  }

  public void setStandardMinInvestment(Float standardMinInvestment) {
    this.standardMinInvestment = standardMinInvestment;
  }

  public MutualFundProfileData turnover(Float turnover) {
    this.turnover = turnover;
    return this;
  }

   /**
   * Turnover.
   * @return turnover
  **/
  @Schema(description = "Turnover.")
  public Float getTurnover() {
    return turnover;
  }

  public void setTurnover(Float turnover) {
    this.turnover = turnover;
  }

  public MutualFundProfileData seriesId(String seriesId) {
    this.seriesId = seriesId;
    return this;
  }

   /**
   * Fund&#x27;s series ID. This field can be used to group multiple share classes into 1 unique fund.
   * @return seriesId
  **/
  @Schema(description = "Fund's series ID. This field can be used to group multiple share classes into 1 unique fund.")
  public String getSeriesId() {
    return seriesId;
  }

  public void setSeriesId(String seriesId) {
    this.seriesId = seriesId;
  }

  public MutualFundProfileData seriesName(String seriesName) {
    this.seriesName = seriesName;
    return this;
  }

   /**
   * Fund&#x27;s series name.
   * @return seriesName
  **/
  @Schema(description = "Fund's series name.")
  public String getSeriesName() {
    return seriesName;
  }

  public void setSeriesName(String seriesName) {
    this.seriesName = seriesName;
  }

  public MutualFundProfileData classId(String classId) {
    this.classId = classId;
    return this;
  }

   /**
   * Class ID.
   * @return classId
  **/
  @Schema(description = "Class ID.")
  public String getClassId() {
    return classId;
  }

  public void setClassId(String classId) {
    this.classId = classId;
  }

  public MutualFundProfileData className(String className) {
    this.className = className;
    return this;
  }

   /**
   * Class name.
   * @return className
  **/
  @Schema(description = "Class name.")
  public String getClassName() {
    return className;
  }

  public void setClassName(String className) {
    this.className = className;
  }

  public MutualFundProfileData sfdrClassification(String sfdrClassification) {
    this.sfdrClassification = sfdrClassification;
    return this;
  }

   /**
   * SFDR classification for EU funds. Under the new classifications, a fund&#x27;s strategy will labeled under either Article 6, 8 or 9. Article 6 covers funds which do not integrate any kind of sustainability into the investment process. Article 8, also known as ‘environmental and socially promoting’, applies “… where a financial product promotes, among other characteristics, environmental or social characteristics, or a combination of those characteristics, provided that the companies in which the investments are made follow good governance practices.”. Article 9, also known as ‘products targeting sustainable investments’, covers products targeting bespoke sustainable investments and applies “… where a financial product has sustainable investment as its objective and an index has been designated as a reference benchmark.”
   * @return sfdrClassification
  **/
  @Schema(description = "SFDR classification for EU funds. Under the new classifications, a fund's strategy will labeled under either Article 6, 8 or 9. Article 6 covers funds which do not integrate any kind of sustainability into the investment process. Article 8, also known as ‘environmental and socially promoting’, applies “… where a financial product promotes, among other characteristics, environmental or social characteristics, or a combination of those characteristics, provided that the companies in which the investments are made follow good governance practices.”. Article 9, also known as ‘products targeting sustainable investments’, covers products targeting bespoke sustainable investments and applies “… where a financial product has sustainable investment as its objective and an index has been designated as a reference benchmark.”")
  public String getSfdrClassification() {
    return sfdrClassification;
  }

  public void setSfdrClassification(String sfdrClassification) {
    this.sfdrClassification = sfdrClassification;
  }

  public MutualFundProfileData currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Fund&#x27;s currency
   * @return currency
  **/
  @Schema(description = "Fund's currency")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MutualFundProfileData mutualFundProfileData = (MutualFundProfileData) o;
    return Objects.equals(this.name, mutualFundProfileData.name) &&
        Objects.equals(this.category, mutualFundProfileData.category) &&
        Objects.equals(this.investmentSegment, mutualFundProfileData.investmentSegment) &&
        Objects.equals(this.totalNav, mutualFundProfileData.totalNav) &&
        Objects.equals(this.expenseRatio, mutualFundProfileData.expenseRatio) &&
        Objects.equals(this.benchmark, mutualFundProfileData.benchmark) &&
        Objects.equals(this.inceptionDate, mutualFundProfileData.inceptionDate) &&
        Objects.equals(this.description, mutualFundProfileData.description) &&
        Objects.equals(this.fundFamily, mutualFundProfileData.fundFamily) &&
        Objects.equals(this.fundCompany, mutualFundProfileData.fundCompany) &&
        Objects.equals(this.manager, mutualFundProfileData.manager) &&
        Objects.equals(this.status, mutualFundProfileData.status) &&
        Objects.equals(this.beta, mutualFundProfileData.beta) &&
        Objects.equals(this.deferredLoad, mutualFundProfileData.deferredLoad) &&
        Objects.equals(this.fee12b1, mutualFundProfileData.fee12b1) &&
        Objects.equals(this.frontLoad, mutualFundProfileData.frontLoad) &&
        Objects.equals(this.iraMinInvestment, mutualFundProfileData.iraMinInvestment) &&
        Objects.equals(this.isin, mutualFundProfileData.isin) &&
        Objects.equals(this.cusip, mutualFundProfileData.cusip) &&
        Objects.equals(this.maxRedemptionFee, mutualFundProfileData.maxRedemptionFee) &&
        Objects.equals(this.standardMinInvestment, mutualFundProfileData.standardMinInvestment) &&
        Objects.equals(this.turnover, mutualFundProfileData.turnover) &&
        Objects.equals(this.seriesId, mutualFundProfileData.seriesId) &&
        Objects.equals(this.seriesName, mutualFundProfileData.seriesName) &&
        Objects.equals(this.classId, mutualFundProfileData.classId) &&
        Objects.equals(this.className, mutualFundProfileData.className) &&
        Objects.equals(this.sfdrClassification, mutualFundProfileData.sfdrClassification) &&
        Objects.equals(this.currency, mutualFundProfileData.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, category, investmentSegment, totalNav, expenseRatio, benchmark, inceptionDate, description, fundFamily, fundCompany, manager, status, beta, deferredLoad, fee12b1, frontLoad, iraMinInvestment, isin, cusip, maxRedemptionFee, standardMinInvestment, turnover, seriesId, seriesName, classId, className, sfdrClassification, currency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MutualFundProfileData {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    investmentSegment: ").append(toIndentedString(investmentSegment)).append("\n");
    sb.append("    totalNav: ").append(toIndentedString(totalNav)).append("\n");
    sb.append("    expenseRatio: ").append(toIndentedString(expenseRatio)).append("\n");
    sb.append("    benchmark: ").append(toIndentedString(benchmark)).append("\n");
    sb.append("    inceptionDate: ").append(toIndentedString(inceptionDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fundFamily: ").append(toIndentedString(fundFamily)).append("\n");
    sb.append("    fundCompany: ").append(toIndentedString(fundCompany)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    beta: ").append(toIndentedString(beta)).append("\n");
    sb.append("    deferredLoad: ").append(toIndentedString(deferredLoad)).append("\n");
    sb.append("    fee12b1: ").append(toIndentedString(fee12b1)).append("\n");
    sb.append("    frontLoad: ").append(toIndentedString(frontLoad)).append("\n");
    sb.append("    iraMinInvestment: ").append(toIndentedString(iraMinInvestment)).append("\n");
    sb.append("    isin: ").append(toIndentedString(isin)).append("\n");
    sb.append("    cusip: ").append(toIndentedString(cusip)).append("\n");
    sb.append("    maxRedemptionFee: ").append(toIndentedString(maxRedemptionFee)).append("\n");
    sb.append("    standardMinInvestment: ").append(toIndentedString(standardMinInvestment)).append("\n");
    sb.append("    turnover: ").append(toIndentedString(turnover)).append("\n");
    sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
    sb.append("    seriesName: ").append(toIndentedString(seriesName)).append("\n");
    sb.append("    classId: ").append(toIndentedString(classId)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    sfdrClassification: ").append(toIndentedString(sfdrClassification)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
