/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;

import java.util.Objects;
/**
 * Transactions
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class Transactions {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("share")
  private Long share = null;

  @SerializedName("change")
  private Long change = null;

  @SerializedName("filingDate")
  private LocalDate filingDate = null;

  @SerializedName("transactionDate")
  private LocalDate transactionDate = null;

  @SerializedName("transactionPrice")
  private Float transactionPrice = null;

  @SerializedName("transactionCode")
  private String transactionCode = null;

  public Transactions symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Symbol.
   * @return symbol
  **/
  @Schema(description = "Symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public Transactions name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Insider&#x27;s name.
   * @return name
  **/
  @Schema(description = "Insider's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Transactions share(Long share) {
    this.share = share;
    return this;
  }

   /**
   * Number of shares held after the transaction.
   * @return share
  **/
  @Schema(description = "Number of shares held after the transaction.")
  public Long getShare() {
    return share;
  }

  public void setShare(Long share) {
    this.share = share;
  }

  public Transactions change(Long change) {
    this.change = change;
    return this;
  }

   /**
   * Number of share changed from the last period. A positive value suggests a &lt;code&gt;BUY&lt;/code&gt; transaction. A negative value suggests a &lt;code&gt;SELL&lt;/code&gt; transaction.
   * @return change
  **/
  @Schema(description = "Number of share changed from the last period. A positive value suggests a <code>BUY</code> transaction. A negative value suggests a <code>SELL</code> transaction.")
  public Long getChange() {
    return change;
  }

  public void setChange(Long change) {
    this.change = change;
  }

  public Transactions filingDate(LocalDate filingDate) {
    this.filingDate = filingDate;
    return this;
  }

   /**
   * Filing date.
   * @return filingDate
  **/
  @Schema(description = "Filing date.")
  public LocalDate getFilingDate() {
    return filingDate;
  }

  public void setFilingDate(LocalDate filingDate) {
    this.filingDate = filingDate;
  }

  public Transactions transactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Transaction date.
   * @return transactionDate
  **/
  @Schema(description = "Transaction date.")
  public LocalDate getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
  }

  public Transactions transactionPrice(Float transactionPrice) {
    this.transactionPrice = transactionPrice;
    return this;
  }

   /**
   * Average transaction price.
   * @return transactionPrice
  **/
  @Schema(description = "Average transaction price.")
  public Float getTransactionPrice() {
    return transactionPrice;
  }

  public void setTransactionPrice(Float transactionPrice) {
    this.transactionPrice = transactionPrice;
  }

  public Transactions transactionCode(String transactionCode) {
    this.transactionCode = transactionCode;
    return this;
  }

   /**
   * Transaction code. A list of codes and their meanings can be found &lt;a href&#x3D;\&quot;https://www.sec.gov/about/forms/form4data.pdf\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener\&quot;&gt;here&lt;/a&gt;.
   * @return transactionCode
  **/
  @Schema(description = "Transaction code. A list of codes and their meanings can be found <a href=\"https://www.sec.gov/about/forms/form4data.pdf\" target=\"_blank\" rel=\"noopener\">here</a>.")
  public String getTransactionCode() {
    return transactionCode;
  }

  public void setTransactionCode(String transactionCode) {
    this.transactionCode = transactionCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transactions transactions = (Transactions) o;
    return Objects.equals(this.symbol, transactions.symbol) &&
        Objects.equals(this.name, transactions.name) &&
        Objects.equals(this.share, transactions.share) &&
        Objects.equals(this.change, transactions.change) &&
        Objects.equals(this.filingDate, transactions.filingDate) &&
        Objects.equals(this.transactionDate, transactions.transactionDate) &&
        Objects.equals(this.transactionPrice, transactions.transactionPrice) &&
        Objects.equals(this.transactionCode, transactions.transactionCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, name, share, change, filingDate, transactionDate, transactionPrice, transactionCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transactions {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    filingDate: ").append(toIndentedString(filingDate)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    transactionPrice: ").append(toIndentedString(transactionPrice)).append("\n");
    sb.append("    transactionCode: ").append(toIndentedString(transactionCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
