/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * InternationalFiling
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class InternationalFiling {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("companyName")
  private String companyName = null;

  @SerializedName("filedDate")
  private String filedDate = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("country")
  private String country = null;

  public InternationalFiling symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Symbol.
   * @return symbol
  **/
  @Schema(description = "Symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public InternationalFiling companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Company name.
   * @return companyName
  **/
  @Schema(description = "Company name.")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public InternationalFiling filedDate(String filedDate) {
    this.filedDate = filedDate;
    return this;
  }

   /**
   * Filed date &lt;code&gt;%Y-%m-%d %H:%M:%S&lt;/code&gt;.
   * @return filedDate
  **/
  @Schema(description = "Filed date <code>%Y-%m-%d %H:%M:%S</code>.")
  public String getFiledDate() {
    return filedDate;
  }

  public void setFiledDate(String filedDate) {
    this.filedDate = filedDate;
  }

  public InternationalFiling category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Category.
   * @return category
  **/
  @Schema(description = "Category.")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public InternationalFiling title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Document&#x27;s title.
   * @return title
  **/
  @Schema(description = "Document's title.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public InternationalFiling description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Document&#x27;s description.
   * @return description
  **/
  @Schema(description = "Document's description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InternationalFiling url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url.
   * @return url
  **/
  @Schema(description = "Url.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public InternationalFiling language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Language.
   * @return language
  **/
  @Schema(description = "Language.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public InternationalFiling country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country.
   * @return country
  **/
  @Schema(description = "Country.")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InternationalFiling internationalFiling = (InternationalFiling) o;
    return Objects.equals(this.symbol, internationalFiling.symbol) &&
        Objects.equals(this.companyName, internationalFiling.companyName) &&
        Objects.equals(this.filedDate, internationalFiling.filedDate) &&
        Objects.equals(this.category, internationalFiling.category) &&
        Objects.equals(this.title, internationalFiling.title) &&
        Objects.equals(this.description, internationalFiling.description) &&
        Objects.equals(this.url, internationalFiling.url) &&
        Objects.equals(this.language, internationalFiling.language) &&
        Objects.equals(this.country, internationalFiling.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, companyName, filedDate, category, title, description, url, language, country);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InternationalFiling {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    filedDate: ").append(toIndentedString(filedDate)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
