/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * IPOCalendar
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class IPOCalendar {
  @SerializedName("ipoCalendar")
  private List<IPOEvent> ipoCalendar = null;

  public IPOCalendar ipoCalendar(List<IPOEvent> ipoCalendar) {
    this.ipoCalendar = ipoCalendar;
    return this;
  }

  public IPOCalendar addIpoCalendarItem(IPOEvent ipoCalendarItem) {
    if (this.ipoCalendar == null) {
      this.ipoCalendar = new ArrayList<IPOEvent>();
    }
    this.ipoCalendar.add(ipoCalendarItem);
    return this;
  }

   /**
   * Array of IPO events.
   * @return ipoCalendar
  **/
  @Schema(description = "Array of IPO events.")
  public List<IPOEvent> getIpoCalendar() {
    return ipoCalendar;
  }

  public void setIpoCalendar(List<IPOEvent> ipoCalendar) {
    this.ipoCalendar = ipoCalendar;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPOCalendar ipOCalendar = (IPOCalendar) o;
    return Objects.equals(this.ipoCalendar, ipOCalendar.ipoCalendar);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipoCalendar);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPOCalendar {\n");
    
    sb.append("    ipoCalendar: ").append(toIndentedString(ipoCalendar)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
