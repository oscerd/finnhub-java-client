/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * EconomicEvent
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class EconomicEvent {
  @SerializedName("actual")
  private Float actual = null;

  @SerializedName("prev")
  private Float prev = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("unit")
  private String unit = null;

  @SerializedName("estimate")
  private Float estimate = null;

  @SerializedName("event")
  private String event = null;

  @SerializedName("impact")
  private String impact = null;

  @SerializedName("time")
  private String time = null;

  public EconomicEvent actual(Float actual) {
    this.actual = actual;
    return this;
  }

   /**
   * Actual release
   * @return actual
  **/
  @Schema(description = "Actual release")
  public Float getActual() {
    return actual;
  }

  public void setActual(Float actual) {
    this.actual = actual;
  }

  public EconomicEvent prev(Float prev) {
    this.prev = prev;
    return this;
  }

   /**
   * Previous release
   * @return prev
  **/
  @Schema(description = "Previous release")
  public Float getPrev() {
    return prev;
  }

  public void setPrev(Float prev) {
    this.prev = prev;
  }

  public EconomicEvent country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country
   * @return country
  **/
  @Schema(description = "Country")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public EconomicEvent unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Unit
   * @return unit
  **/
  @Schema(description = "Unit")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public EconomicEvent estimate(Float estimate) {
    this.estimate = estimate;
    return this;
  }

   /**
   * Estimate
   * @return estimate
  **/
  @Schema(description = "Estimate")
  public Float getEstimate() {
    return estimate;
  }

  public void setEstimate(Float estimate) {
    this.estimate = estimate;
  }

  public EconomicEvent event(String event) {
    this.event = event;
    return this;
  }

   /**
   * Event
   * @return event
  **/
  @Schema(description = "Event")
  public String getEvent() {
    return event;
  }

  public void setEvent(String event) {
    this.event = event;
  }

  public EconomicEvent impact(String impact) {
    this.impact = impact;
    return this;
  }

   /**
   * Impact level
   * @return impact
  **/
  @Schema(description = "Impact level")
  public String getImpact() {
    return impact;
  }

  public void setImpact(String impact) {
    this.impact = impact;
  }

  public EconomicEvent time(String time) {
    this.time = time;
    return this;
  }

   /**
   * Release time
   * @return time
  **/
  @Schema(description = "Release time")
  public String getTime() {
    return time;
  }

  public void setTime(String time) {
    this.time = time;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EconomicEvent economicEvent = (EconomicEvent) o;
    return Objects.equals(this.actual, economicEvent.actual) &&
        Objects.equals(this.prev, economicEvent.prev) &&
        Objects.equals(this.country, economicEvent.country) &&
        Objects.equals(this.unit, economicEvent.unit) &&
        Objects.equals(this.estimate, economicEvent.estimate) &&
        Objects.equals(this.event, economicEvent.event) &&
        Objects.equals(this.impact, economicEvent.impact) &&
        Objects.equals(this.time, economicEvent.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actual, prev, country, unit, estimate, event, impact, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EconomicEvent {\n");
    
    sb.append("    actual: ").append(toIndentedString(actual)).append("\n");
    sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    estimate: ").append(toIndentedString(estimate)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
