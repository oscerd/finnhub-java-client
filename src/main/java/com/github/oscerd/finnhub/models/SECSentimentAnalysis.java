/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * SECSentimentAnalysis
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class SECSentimentAnalysis {
  @SerializedName("accessNumber")
  private String accessNumber = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("cik")
  private String cik = null;

  @SerializedName("sentiment")
  private FilingSentiment sentiment = null;

  public SECSentimentAnalysis accessNumber(String accessNumber) {
    this.accessNumber = accessNumber;
    return this;
  }

   /**
   * Access number.
   * @return accessNumber
  **/
  @Schema(description = "Access number.")
  public String getAccessNumber() {
    return accessNumber;
  }

  public void setAccessNumber(String accessNumber) {
    this.accessNumber = accessNumber;
  }

  public SECSentimentAnalysis symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Symbol.
   * @return symbol
  **/
  @Schema(description = "Symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public SECSentimentAnalysis cik(String cik) {
    this.cik = cik;
    return this;
  }

   /**
   * CIK.
   * @return cik
  **/
  @Schema(description = "CIK.")
  public String getCik() {
    return cik;
  }

  public void setCik(String cik) {
    this.cik = cik;
  }

  public SECSentimentAnalysis sentiment(FilingSentiment sentiment) {
    this.sentiment = sentiment;
    return this;
  }

   /**
   * Get sentiment
   * @return sentiment
  **/
  @Schema(description = "")
  public FilingSentiment getSentiment() {
    return sentiment;
  }

  public void setSentiment(FilingSentiment sentiment) {
    this.sentiment = sentiment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SECSentimentAnalysis seCSentimentAnalysis = (SECSentimentAnalysis) o;
    return Objects.equals(this.accessNumber, seCSentimentAnalysis.accessNumber) &&
        Objects.equals(this.symbol, seCSentimentAnalysis.symbol) &&
        Objects.equals(this.cik, seCSentimentAnalysis.cik) &&
        Objects.equals(this.sentiment, seCSentimentAnalysis.sentiment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessNumber, symbol, cik, sentiment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SECSentimentAnalysis {\n");
    
    sb.append("    accessNumber: ").append(toIndentedString(accessNumber)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    cik: ").append(toIndentedString(cik)).append("\n");
    sb.append("    sentiment: ").append(toIndentedString(sentiment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
