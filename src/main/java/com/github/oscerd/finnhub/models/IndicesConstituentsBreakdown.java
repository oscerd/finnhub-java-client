/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * IndicesConstituentsBreakdown
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class IndicesConstituentsBreakdown {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("isin")
  private String isin = null;

  @SerializedName("cusip")
  private String cusip = null;

  @SerializedName("shareClassFIGI")
  private String shareClassFIGI = null;

  @SerializedName("weight")
  private Float weight = null;

  public IndicesConstituentsBreakdown symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Symbol.
   * @return symbol
  **/
  @Schema(description = "Symbol.")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public IndicesConstituentsBreakdown name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name.
   * @return name
  **/
  @Schema(description = "Name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IndicesConstituentsBreakdown isin(String isin) {
    this.isin = isin;
    return this;
  }

   /**
   * ISIN.
   * @return isin
  **/
  @Schema(description = "ISIN.")
  public String getIsin() {
    return isin;
  }

  public void setIsin(String isin) {
    this.isin = isin;
  }

  public IndicesConstituentsBreakdown cusip(String cusip) {
    this.cusip = cusip;
    return this;
  }

   /**
   * Cusip.
   * @return cusip
  **/
  @Schema(description = "Cusip.")
  public String getCusip() {
    return cusip;
  }

  public void setCusip(String cusip) {
    this.cusip = cusip;
  }

  public IndicesConstituentsBreakdown shareClassFIGI(String shareClassFIGI) {
    this.shareClassFIGI = shareClassFIGI;
    return this;
  }

   /**
   * Global Share Class FIGI.
   * @return shareClassFIGI
  **/
  @Schema(description = "Global Share Class FIGI.")
  public String getShareClassFIGI() {
    return shareClassFIGI;
  }

  public void setShareClassFIGI(String shareClassFIGI) {
    this.shareClassFIGI = shareClassFIGI;
  }

  public IndicesConstituentsBreakdown weight(Float weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Weight.
   * @return weight
  **/
  @Schema(description = "Weight.")
  public Float getWeight() {
    return weight;
  }

  public void setWeight(Float weight) {
    this.weight = weight;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndicesConstituentsBreakdown indicesConstituentsBreakdown = (IndicesConstituentsBreakdown) o;
    return Objects.equals(this.symbol, indicesConstituentsBreakdown.symbol) &&
        Objects.equals(this.name, indicesConstituentsBreakdown.name) &&
        Objects.equals(this.isin, indicesConstituentsBreakdown.isin) &&
        Objects.equals(this.cusip, indicesConstituentsBreakdown.cusip) &&
        Objects.equals(this.shareClassFIGI, indicesConstituentsBreakdown.shareClassFIGI) &&
        Objects.equals(this.weight, indicesConstituentsBreakdown.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, name, isin, cusip, shareClassFIGI, weight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndicesConstituentsBreakdown {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isin: ").append(toIndentedString(isin)).append("\n");
    sb.append("    cusip: ").append(toIndentedString(cusip)).append("\n");
    sb.append("    shareClassFIGI: ").append(toIndentedString(shareClassFIGI)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
