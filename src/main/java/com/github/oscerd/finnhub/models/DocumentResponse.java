/*
 * Finnhub API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.oscerd.finnhub.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * DocumentResponse
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-22T10:38:13.551248835+01:00[Europe/Rome]")

public class DocumentResponse {
  @SerializedName("documentId")
  private String documentId = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("hits")
  private String hits = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("format")
  private String format = null;

  @SerializedName("excerpts")
  private List<ExcerptResponse> excerpts = null;

  public DocumentResponse documentId(String documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * AlphaResearch internal document id.
   * @return documentId
  **/
  @Schema(description = "AlphaResearch internal document id.")
  public String getDocumentId() {
    return documentId;
  }

  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }

  public DocumentResponse title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title for this document.
   * @return title
  **/
  @Schema(description = "Title for this document.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DocumentResponse hits(String hits) {
    this.hits = hits;
    return this;
  }

   /**
   * Number of hit in this document
   * @return hits
  **/
  @Schema(description = "Number of hit in this document")
  public String getHits() {
    return hits;
  }

  public void setHits(String hits) {
    this.hits = hits;
  }

  public DocumentResponse url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Link to render this document
   * @return url
  **/
  @Schema(description = "Link to render this document")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public DocumentResponse format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Format of this document (can be html or pdf)
   * @return format
  **/
  @Schema(description = "Format of this document (can be html or pdf)")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public DocumentResponse excerpts(List<ExcerptResponse> excerpts) {
    this.excerpts = excerpts;
    return this;
  }

  public DocumentResponse addExcerptsItem(ExcerptResponse excerptsItem) {
    if (this.excerpts == null) {
      this.excerpts = new ArrayList<ExcerptResponse>();
    }
    this.excerpts.add(excerptsItem);
    return this;
  }

   /**
   * Highlighted excerpts for this document
   * @return excerpts
  **/
  @Schema(description = "Highlighted excerpts for this document")
  public List<ExcerptResponse> getExcerpts() {
    return excerpts;
  }

  public void setExcerpts(List<ExcerptResponse> excerpts) {
    this.excerpts = excerpts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentResponse documentResponse = (DocumentResponse) o;
    return Objects.equals(this.documentId, documentResponse.documentId) &&
        Objects.equals(this.title, documentResponse.title) &&
        Objects.equals(this.hits, documentResponse.hits) &&
        Objects.equals(this.url, documentResponse.url) &&
        Objects.equals(this.format, documentResponse.format) &&
        Objects.equals(this.excerpts, documentResponse.excerpts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, title, hits, url, format, excerpts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentResponse {\n");
    
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    hits: ").append(toIndentedString(hits)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    excerpts: ").append(toIndentedString(excerpts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
